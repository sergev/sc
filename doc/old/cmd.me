.sh 1 "Система команд."
.sh 2 "Передвижение по таблице."
.pp
Для перемещения по таблице служат команды:
.ba +8n
.ip "^L или стрелка влево"
влево на одну клетку
.ip "^R или стрелка вправо"
вправо на одну клетку
.ip "^U или стрелка вверх"
вверх на одну клетку
.ip "^D или стрелка вниз"
вниз на одну клетку
.ip "^Y или <Home>"
влево на ширину окна
.ip "^Z или <End>"
вправо на ширину окна
.ip "^K или <Page Up>"
вверх на высоту окна
.ip "^B или <Page Down>"
вниз на высоту окна
.ba -8n
.pp
При попытке перейти на ячейку, которая расположена за границами окна,
например, двигаясь все время вправо, окно будет постепенно передвигаться,
пока не достигнет края таблицы.
.pp
Часто возникает необходимость перейти в начало строки или к верхнему
элементу столбца, а также найти последний непустой элемент строки или столбца.
Это можно делать и стрелками, но существуют более удобные
команды передвижения:
.ba +8n
.ip "0 " 10n
к началу текущей строки
.ip "$ " 10n
к последней непустой клетке текущей строки
.ip "^ " 10n
к верхней клетке в текущем столбце
.ip "# " 10n
к последней непустой клетке в текущем столбце
.ba -8n
.pp
Не удивляйтесь, что нажатие команд "^" и "#" приводит сейчас к
одинаковому результату. Поскольку таблица пуста, команда "#",
не найдя ни одной непустой клетки, возвращает вас к строке 0.
.pp
Есть еще одна удобная команда, служащая для поиска клетки по имени.
Это команда "g" (goto). Выполняется она несколько иначе, чем все предыдущие.
Прежде по нажатию клавиши сразу выполнялись интересующие вас действия.
Сейчас же, если вы дадите команду "g", произойдет переход в так называемый
командный режим. Верхняя строка примет вид:
.(b
>> goto [v]
.)b
и в конце ее остановится курсор.
.b ШЭТ
ждет от вас ввода имени требуемой
клетки. Введите, например,
.b aa100
и нажмите клавишу <Return>.
Произойдет выполнение команды, и табличный курсор окажется на ячейке
.b aa100 .
.pp
Командный режим является основным в
.b ШЭТ .
Именно через него
происходит выполнение большинства команд. При вводе имени команды
происходит переход в командный режим и автоматически набирается начальная
часть командной строки. Затем пользователь должен задать параметры
и выполнить команду, нажав <Return>. От выполнения команды можно
отказаться, нажав ^G. Командная строка может содержать
комментарии в квадратных скобках.
.pp
В командный режим можно перейти и без задания имени команды,
нажав <Return>. Верхняя строка примет вид:
.(b
>>
.)b
с курсором в конце. Вы можете сами набрать команду целиком.
.sh 2 "Ввод чисел и текста."
.pp
В клетки можно вводить текст и формулы. Числа являются частным
случаем формул. Для ввода формул (и чисел) служит команда "=".
В командном режиме произойдет дозапрос формулы, например:
.(b
>> let a0 = 1
.)b
или
.(b
>> let b9 = a0*9
.)b
.pp
Командами ^H (backspace) и ^? (del) можно стирать неправильно
введенные символы в командной строке.
.pp
Для тренировки введите числа 1, 2, 3, 4, 5, 6 в клетки
.b a2-a7
и в клетки
.b b1-g1 ,
формулу
.b a2+b1
в клетку
.b b2 .
.pp
Для ввода текстовых значений служит команда ", например:
.(b
>> label a0 = "example
.)b
.pp
Введите строку "example" в
.b a0 .
Строка окажется прижатой влево.
Для ввода строки, прижатой вправо, служит команда ">":
.(b
>> rightstring z99 = "right
.)b
.pp
Есть и команда "<", но ничего нового она не делает.
Фактически, это - синоним команды ".
.pp
Стоит упомянуть об одной особенности, сильно упрощающей ввод
длинных текстовых значений. Если текстовая строка длиннее, чем одна
ячейка, нет необходимости разделять ее на части, и каждую часть вводить
в отдельную клетку. Дело в том, что если текстовая константа, прижатая влево,
длиннее ширины столбца и клетки справа от нее пусты, она будет отображаться
на экране целиком, выходя за пределы своей ячейки.
.sh 2 "Удаление и копирование клеток."
.pp
Очистить текущую клетку, уничтожив число, формулу или текст, содержащийся
в ней, можно командой "x".
.pp
После того, как клетка очищена, она становится пустой, но
.b ШЭТ
еще помнит ее содержимое. Его можно вернуть в таблицу в другом месте, дав
команду "pm".
.pp
Эти две команды можно применять и для копирования клеток, но есть
более удобный способ. Команда "m" запоминает содержимое текущей клетки,
и его можно скопировать в другую клетку, перейдя в нее и дав команду "c".
.pp
Воспользовавшись таблицей, полученной в предыдущем разделе,
скопируйте клетку
.b b2
в
.b b3-b6 ,
.b c2-c6 ,
.b d2-d6 .
Вы получите на экране
часть так называемого треугольника Паскаля, где каждая клетка равняется
сумме левого и верхнего соседей. Заметим, что при копировании формулы
имена клеток, встречающиеся в ней, корректируются относительно нового
положения.
.sh 2 "Ввод формул."
.pp
Для ввода формул применяется команда "=". Дозапрос формулы происходит
в командном режиме.
.sh 3 "Синтаксис формул."
.pp
Формулы, используемые в
.b ШЭТ ,
имеют синтаксис, подобный выражениям
языка Си. Операндами могут быть имена клеток таблицы, целые и вещественные
числа в виде, принятом в Си. Для группировки операндов применяются
круглые скобки. Все значения имеют тип двойной точности (double).
Если клетка пуста или содержит текстовую константу, ее значением считается 0.
.pp
При вычислении формул могут возникать ошибки, например, деление на 0
или логарифм отрицательного числа. В таком случае значением клетки становится
"ошибка", и она отображается на экране как "??".
.pp
В формулах могут образовываться неопределенные ссылки, например,
при удалении строки, содержащей используемую в формуле клетку.
При вычислении такой формулы также возникает "ошибка".
.pp
Неопределенные ссылки отображаются в тексте формулы как "??".
.sh 3 "Операции."
.pp
В описании операций используются обозначения:
.ba +8n
.ip "e " 10n
выражение
.ip "v " 10n
имя клетки
.ba -8n
.pp
При вычислении некоторых операций возможно возникновение "ошибки".
С другой стороны, переполнение при умножении и других операциях не
контролируется.
.sh 4 "Унарные операции."
.ba +8n
.ip "-e " 10n
унарный минус
.ip "!e " 10n
логическое отрицание: если e равно 0 то 1 иначе 0
.ip "~e " 10n
квадратный корень
.ip "e' " 10n
возведение в квадрат
.ba -8n
.pp
Все унарные операции имеют одинаковый приоритет.
Выполнение унарных операций происходит справа налево, например:
.(b
- ! ~ e '  равно  - ( ! ( ~ ( e ' ) ) )
.)b
.sh 4 "Бинарные операции."
.ba +8n
.ip "e + e " 10n
сложение
.ip "e - e " 10n
вычитание
.ip "e * e " 10n
умножение
.ip "e / e " 10n
деление
.ip "e ^ e " 10n
возведение в степень
.ip "e & e " 10n
если e не 0 и e не 0 то 1 иначе 0
.ip "e | e " 10n
если e не 0 или e не 0 то 1 иначе 0
.ip "e < e " 10n
если e меньше e то 1 иначе 0
.ip "e = e " 10n
если e равно e то 1 иначе 0
.ip "e > e " 10n
если e больше e то 1 иначе 0
.ip "e <= e " 10n
если e меньше или равно e то 1 иначе 0
.ip "e >= e " 10n
если e больше или равно e то 1 иначе 0
.ba -8n
.pp
Приоритеты бинарных операций указаны в разделе 2.4.2.6.
Операции с одинаковым приоритетом выполняются слева направо.
.sh 4 "Тетрарные операции."
.ba +8n
.ip "e ? e : e " 10n
если ... то ... иначе ...
.ba -8n
.pp
Если первое выражение не 0, то значением операции будет значение
второго выражения, иначе - значение третьего выражения.
.pp
Эта операция имеет самый низкий приоритет.
.sh 4 "Специальные операции."
.ba +8n
.ip "$v " 10n
"жесткая" ссылка на ячейку
.ba -8n
.pp
Эта операция требует некоторых пояснений. Значением ее является
просто значение соответствующей ячейки, поэтому при вычислении она
никакого действия не оказывает. А проявляет она себя в тех случаях,
когда формула копируется в другое место командами "m", "c". При этом все
имена, встречающиеся в формуле, изменяются относительно нового положения
формулы. Например, введя в ячейку
.b b5
формулу "b3+b4" и скопировав ее
в клетку
.b d8 ,
вы получите формулу "d6+d7". Для того, чтобы защитить
имя переменной от коррекции при копировании формулы, применяется
операция "$". В качестве примера можно привести задачу из раздела 3.2,
где ячейки
.b e12-e17
были получены копированием клетки
.d e11 .
.sh 4 "Операции над областями."
.pp
Областью называется прямоугольный участок таблицы. Область
однозначно определяется указанием имен клеток, лежащих в противоположных
ее углах.
.ba +8n
.ip "v ++ v " 10n
сумма всех непустых клеток в области
.ip "v -- v " 10n
среднее всех непустых клеток в области
.ip "v ** v " 10n
произведение всех непустых клеток
.ip "v // v " 10n
количество непустых клеток в области
.ba -8n
.sh 4 "Приоритет операций."
.pp
Ниже перечислены операции в порядке убывания приоритета.
Операции с одинаковым приоритетом расположены в одной строке:
.so tab2.me
.pp
Унарные операции выполняются справа налево. Бинарные операции
с одинаковым приоритетом выполняются слева направо.
.sh 3 Константы.
.pp
Для использования в математических приложениях определены
встроенные константы:
.ba +8n
.ip "pi " 10n
3.14159265358979...
.ip "e " 10n
2.71828182845904...
.ba -8n
.sh 3 Функции.
.pp
Для вычисления функций используется библиотека
.b libm
языка Си.
Все они оперируют с плавающими числами двойной точности,
тригонометрические функции работают с углами,
выраженными в радианах.
.ba +8n
.ip "exp (x) " 10n
e в степени x
.ip "ln (x) " 10n
натуральный логарифм x
.ip "log (x) " 10n
десятичный логарифм x
.ip "floor (x) " 10n
максимальное целое, не превосходящее x
.ip "ceil (x) " 10n
минимальное целое, не меньшее x
.ip "hypot (x, y) " 10n
гипотенуза треугольника с катетами x и y
.ip "fabs (x) " 10n
абсолютное значение x
.ip "sin (x) " 10n
синус x
.ip "cos (x) " 10n
косинус x
.ip "tan (x) " 10n
тангенс x
.ip "asin (x) " 10n
арксинус в диапазоне -pi/2...pi/2
.ip "acos (x) " 10n
арккосинус в диапазоне 0...pi
.ip "atan (x) " 10n
арктангенс в диапазоне -pi/2...pi/2
.ip "dtr (x) " 10n
преобразует x из градусов в радианы
.ip "rtd (x) " 10n
преобразует x из радианов в градусы
.ip "max (x, y) " 10n
наибольшее из двух значений
.ip "min (x, y) " 10n
наименьшее из двух значений
.ip "gamma (x) " 10n
натуральный логарифм гамма-функции
.ba -8n
.sh 2 "Работа с файлами."
.pp
Для того, чтобы сохранить таблицу в файле операционной системы,
служит команда "P". На дозапрос
.(b
>> put [database into] "
.)b
нужно ввести имя файла.
.b ШЭТ
не добавляет к имени файла никаких расширений.
Имя файла может содержать префикс из имен каталогов, например:
.(b
>> put [database into] "/usr/tmp/work.sc
.)b
.pp
После этого можно смело выходить из
.b ШЭТ ,
не боясь потерять таблицу.
В следующем сеансе вы сможете загрузить ее командой "G":
.(b
>> get [database from] "/usr/tmp/work.sc
.)b
.pp
Можно также вызвать
.b ШЭТ
с параметром-именем файла, например:
.(b
$ sc /usr/tmp/work.sc
.)b
Тогда перед началом работы таблица окажется уже загруженной.
.pp
Файлы, созданные таким образом, имеют обычный текстовый формат,
каждая строка содержит одну из команд
.b ШЭТ .
В главе 3 для всех
примеров приведены тексты таких файлов. Их можно набрать вручную
в текстовом редакторе и использовать, хотя удобнее это делать
непосредственно в
.b ШЭТ .
.pp
Для того, чтобы распечатать таблицу в удобном для восприятия
виде (т. е. так, как она видна на экране), есть команда "W":
.(b
>> write [listing to] "/dev/lp
.)b
.pp
Две таблицы можно слить в одну, как бы накладывая одну поверх
другой. При этом старые значения заменяются новыми. Это делается
командой "M":
.(b
>> merge [database from] "new.lp
.)b
Таблица из указанного файла добавляется к текущей.
.pp
Таблицы, созданные в
.b ШЭТ ,
можно записать в файл в формате, подходящем
для обработки препроцессором
.b tbl
форматора
.b nroff .
Это делается командой "T":
.(b
>> tbl [listing to] "sheet.tbl
.)b
Именно так получены таблицы, приведенные в главе 3.
.pp
Сохраните треугольник Паскаля, полученный в разделе 2.3,
в файле "pascal.sc".
.sh 2 "Редактирование значений."
.pp
Неправильно введенное значение можно просто ввести заново,
однако иногда удобнее использовать для этого специальные команды
редактирования: "e" для редактирования формул и "E" для редактирования
текстовых строк. Они работают так же, как и соответствующие команды
"=", ">" и "<", но командная строка вначале содержит старое значение.
.sh 2 "Изменение формата и ширины столбцов."
.pp
По умолчанию числовые значения выдаются в формате с фиксированной
точкой и двумя знаками после точки (%*.2f, где * - ширина столбца).
Ширина столбца равна\ 10. Количество знаков после точки и ширину столбца
можно изменить командой "f". Например:
.(b
>> format [for column] a [is] 30 20
.)b
устанавливает ширину столбца a равной\ 30, точность\ -\ 20 знаков после точки.
.sh 2 "Удаление, вставка, копирование строк и столбцов."
.pp
Все команды, работающие со строками и столбцами, состоят из двух
букв. Первая (a, d, p, i, z, v, s) определяет тип команды, вторая
говорит о том, нужно ли выполнять команду над текущим столбцом
(c, j, k, ^N, ^P или стрелки вниз-вверх) или текущей строкой
(r, l, h, ^B, ^F или стрелки вправо-влево).
.ba +8n
.ip "ar, ac " 10n
удваивает текущую строку (столбец)
.ip "dr, dc " 10n
удаляет текущую строку (столбец)
.ip "ir, ic " 10n
вставляет пустую строку (столбец)
.ip "pr, pc, pm " 10n
вставляет удаленные строки (столбцы)
.ba -8n
.pp
Команда "pr" вставляет нужное количество строк, "pc" -
нужное количество столбцов, "pm" не вставляет новые столбцы и строки,
а накладывает новые значения на старые.
.sh 2 "Упрятывание строк и столбцов."
.pp
Одной из удобных особенностей
.b ШЭТ
является возможность "спрятать"
столбцы и строки, которые в данный момент не нужны. Они не удаляются
из таблицы, по-прежнему содержат значения и формулы, участвуют в
вычислениях, но на экране не отображаются. При этом таблица принимает
более компактный и обозримый вид. Часто при расчетах используется много
промежуточных значений и выкладок. Именно их и стоит прятать, освобождая
таблицу от лишней информации.
.pp
Команды "zr" и "zc" прячут соответственно текущую строку и столбец.
Спрятанные части таблицы можно снова "открыть" командой "sr" (строки)
и "sc" (столбцы). В командном режиме произойдет дозапрос диапазона.
По умолчанию открывается первая из упрятанных строк или столбцов.
К примеру, команда
.(b
>> show 3:12
.)b
открывает строки с 3 по 12.
.sh 2 "Работа с областями."
.pp
Команды данной группы работают с областями - прямоугольными
участками таблицы с указанными углами. Первый символ команды - "/",
второй определяет команду.
.ba +8n
.ip "/x " 10n
очистить область. Удаленные клетки можно вставить
одной из команд "p".
.ip "/c " 10n
скопировать область на место, указанное текущей клеткой.
.ip "/f " 10n
заполнить область константами с заданными начальным значением
и приращением.
.ba -8n
.lp
В командном режиме произойдет дозапрос координат области и необходимых
параметров. Примеры:
.(b
>> erase [v:v] a3:c12
.sp
>> copy [to] b4 [from v:v] a27:e47
.sp
>> fill [v:v start inc] a0:d10 1 1
.)b
.sh 2 "Сервисные возможности."
.pp
Команды "vr", "vc" удаляют выражения из клеток текущей строки (столбца),
оставляя только численные значения.
.pp
В режиме ввода команды команда ^V печатает в командной строке имя
текущей клетки, ^E - выражение из текущей клетки,
^A - численное значение текущей клетки.
Очень полезно при вводе формул.
.pp
В режиме перемещения по таблице в верхней строке отображается
содержимое текущей клетки. Командой ^T это отображение можно
включить/выключить. Полезно на медленных терминалах.
.pp
Команда ^L перерисовывает экран.
.pp
Перед командами h, l, k, j, ^B, ^F, ^P, ^N, x, ar, ac, dr, dc,
ir, ic, zr, zc можно задавать целочисленный параметр, определяющий
число повторений команды. Перед вводом этого параметра в режиме
командной строки нужно нажать ^U.
